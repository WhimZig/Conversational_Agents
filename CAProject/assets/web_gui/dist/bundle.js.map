{"version":3,"sources":["webpack:///webpack/bootstrap 5f329612db5f012d5041","webpack:///./~/furhat-gui/dist/index.js","webpack:///./src/main.js","webpack:///./~/furhat-core/dist/index.js"],"names":["furhat","pics","document","getElementById","innerHTML","setupSubscriptions","console","log","subscribe","event","param1","setPicSelection","pic","setSoloPic","then","connection","onConnectionError","_connection","ev","error","onConnectionClose","warn","send","event_name","catch","debug","addEventListener","input","folder","pic_names","split","newHtml","i","length"],"mappings":"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AAOxB,SAAP,GAAmB2B,OAAnB;;AAR6B,6BASrBC,EATqB;AAU3B9B,aAASC,cAAT,CAAwB,SAAO6B,EAA/B,EAAkCN,gBAAlC,CAAmD,OAAnD,EAA4D,YAAM;AAChE1B,aAAOsB,IAAP,CAAY;AACVC,oBAAY,aADF;AAEVX,aAAKiB,UAAUG,EAAV;AAFK,OAAZ;AAID,KALD;AAV2B;;AAS7B,OAAI,IAAIA,KAAE,CAAV,EAAYA,KAAEH,UAAUI,MAAxB,EAA+BD,IAA/B,EAAmC;AAAA,UAA3BA,EAA2B;AAOlC;AACF;;AAED;AACA,SAASnB,UAAT,CAAoBc,KAApB,EAA0B;AACxBrB,UAAQC,GAAR,CAAY,kBAAZ;AACA,MAAIqB,SAAQ1B,SAASC,cAAT,CAAwB,QAAxB,CAAZ;AACAyB,SAAOxB,SAAP,GAAkB,8CAA4CuB,KAA5C,GAAkD,KAApE;AACD,C;;;;;;;ACtFY;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,YAAY,GAAG,UAAU,GAAG,WAAW;AACvF;AACA,yBAAyB,mCAAmC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAqD;AAC7E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,iDAAiD;AAClF;AACA;AACA;AACA;AACA,iCAAiC,iDAAiD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5f329612db5f012d5041","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Furhat = void 0;\nconst furhat_core_1 = __importDefault(require(\"furhat-core\"));\nexports.Furhat = furhat_core_1.default;\nlet furhat;\nlet portNumber;\n/**\n * FurhatGUI Function which sets up a connection to the furhat skill and gives\n * the furhat object to send and recieve events to the skill.\n * @return Promise that will return the promise with a `Furhat` obkect\n */\nconst FurhatGUI = () => new Promise((resolve, reject) => {\n    window.fetch('/port', { method: 'GET' }) // eslint-disable-line no-undef\n        .then(r => r.json())\n        .then(({ address, port }) => {\n        portNumber = port;\n        furhat = new furhat_core_1.default(address, port, 'api');\n        return furhat.init();\n    })\n        .then(() => {\n        const senseSkillGuiEvent = {\n            event_name: 'furhatos.event.senses.SenseSkillGUIConnected',\n            port: portNumber,\n        };\n        furhat.send(senseSkillGuiEvent);\n        resolve(furhat);\n    })\n        .catch((error) => reject(`Something went wrong: ${error}`));\n});\nexports.default = FurhatGUI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/furhat-gui/dist/index.js\n// module id = 0\n// module chunks = 0","import FurhatGUI, { Furhat } from 'furhat-gui'\n\nlet furhat: Furhat = null\n\nlet pics = []\n\ndocument.getElementById('folder').innerHTML=\"<h3>Arthos will show you amazing art in a second!</h3>\"\n//setting subcsriptions to get shit from the furhat skills\nfunction setupSubscriptions() {\n\n  console.log('setupSubscriptions')\n\n  furhat.subscribe('furhatos.app.caproject.events.LoggingGui', (event) => {\n    console.log('furhat said:', event.param1)\n  })\n\n  furhat.subscribe('furhatos.app.caproject.events.SetPics', (event) => {\n    console.log('furhat said:', event.pics)\n    setPicSelection(event.pics)\n  })\n  furhat.subscribe('furhatos.app.caproject.events.SetPicSolo', (event) => {\n    console.log('furhat said:', event.pic)\n    setSoloPic(event.pic)\n  })\n\n  \n}\n\n\n//Furhat code yoinked from github  https://github.com/FurhatRobotics/FurhatJSGUI\nFurhatGUI()\n  .then(connection => {\n\n    furhat = connection\n    console.log('received connection')\n\n    furhat.onConnectionError((_connection: WebSocket, ev: globalThis.Event) => {\n      console.error(\"Error occured while connecting to Furhat skill\")\n    })\n    furhat.onConnectionClose(() => {\n      console.warn(\"Connection with Furhat skill has been closed\")\n    })\n\n    setupSubscriptions()\n    //control ping so we know connection worked\n    furhat.send({\n      event_name: \"LoggingPing\",\n    })\n    console.log(\"Pinged Furhat skill\")\n\n  })\n  .catch(console.error)\n\n//Button to test everything\nlet debug=true\nif(debug){\ndocument.getElementById(\"debug-folder\").innerHTML='<button type=\"button\" id=\"pinging\"> Ping! </button><button type=\"button\" id=\"3pics\"> All the pics! </button><button type=\"button\" id=\"solopic\"> Solo pic! </button>'\ndocument.getElementById(\"pinging\").addEventListener(\"click\", () => { furhat.send({event_name:\"LoggingPing\"}) })\ndocument.getElementById(\"solopic\").addEventListener(\"click\", () => { furhat.send({event_name:\"SelectedPic\",pic:\"seascape_richter.jpg\"}) })\ndocument.getElementById(\"3pics\").addEventListener(\"click\", () => { furhat.send({event_name:\"Showpics\"}) })\n}\n// Setting 3 pic selection\nfunction setPicSelection(input){\n  console.log(\"Setting pic selection\")\n  let folder= document.getElementById(\"folder\")\n  let pic_names=input.split(',')\n  let newHtml=\"\"\n  for(let i=0;i<pic_names.length;i++){\n    newHtml+='<img class=\"art\" id=\"pic-'+i+'\" src=\"pics/imagesf2/'+pic_names[i]+'\"/>'\n  }\n  folder.innerHTML = newHtml\n  for(let i=0;i<pic_names.length;i++){\n    document.getElementById(\"pic-\"+i).addEventListener(\"click\", () => {\n      furhat.send({\n        event_name: \"SelectedPic\",\n        pic: pic_names[i],\n      })\n    })\n  }\n}\n\n//setting solo pic\nfunction setSoloPic(input){\n  console.log('setting solo pic')\n  let folder= document.getElementById(\"folder\")\n  folder.innerHTML ='<img class=\"art solo\" src=\"pics/imagesf2/'+input+'\"/>'\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Furhat main class. Maintains the websocket connection to furhatOS and\n * has methods to send events, subscribe to events and helper methods such as say,\n * gesture, etc.\n *\n * @param domain IP Address for furhatOS - localhost if SDK.\n * @param port port for RealTimeAPI module of furhatOS.\n * @param route route for RealTimeAPI module of furhatOS.\n */\nclass Furhat {\n    constructor(domain, port, route) {\n        this.eventFunctions = {};\n        this.domain = domain;\n        this.port = port;\n        this.route = route;\n    }\n    /**\n     * Initializes the connection and return a promise. Await for the promise to resolve before\n     * using the object\n     */\n    init() {\n        return new Promise((resolve, reject) => {\n            this.socket = new WebSocket(`ws://${this.domain}:${this.port}/${this.route}`);\n            this.socket.onopen = () => {\n                resolve({ error: false, message: \"Success\" });\n            };\n            this.socket.onmessage = (message) => {\n                const event = JSON.parse(message.data);\n                // If a callback is available then call it\n                this.eventFunctions[event.event_name] !== undefined &&\n                    this.eventFunctions[event.event_name](event);\n            };\n            this.socket.onerror = () => {\n                reject({ error: true, message: \"Error while opening socket\" });\n            };\n        });\n    }\n    /**\n     * Method to set a callback that will be triggered `onerror` of the underlying websocket\n     * @param callback Callback function to be trigger on WebSocket connection error\n     */\n    onConnectionError(callback) { this.socket && (this.socket.onerror = callback); }\n    /**\n     * Method to set a callback that will be triggered `onclose` of the underlying websocket\n     * @param callback Callback function to be trigger on WebSocket connection close\n     */\n    onConnectionClose(callback) { this.socket && (this.socket.onclose = callback); }\n    /**\n     * Sends an event to furhatOS\n     * @param event Object containing the event. Mandtory to have event_name parameter in the object\n     */\n    send(event) {\n        var _a, _b, _c;\n        if (((_a = this.socket) === null || _a === void 0 ? void 0 : _a.readyState) === 2 || ((_b = this.socket) === null || _b === void 0 ? void 0 : _b.readyState) === 3) {\n            console.warn(\"Cannot send event. Socket is not ready.\");\n            return false;\n        }\n        else if (((_c = this.socket) === null || _c === void 0 ? void 0 : _c.readyState) === 1) {\n            this.socket.send(JSON.stringify(event));\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Subscribes to the given event and triggers the supplied callback on event\n     * @param eventName Name of the event to subscribe\n     * @param callback Function which needs to be triggered when the given event is recieved\n     * @param dontSend [Optional] [false by default] Boolean which determines wether to send\n     * the subscribe event or not. use it to set callbacks for event that are already subscribed to,\n     * for instance with group subscriptions\n     */\n    subscribe(eventName, callback, dontSend = false) {\n        const event = { event_name: 'furhatos.event.actions.ActionRealTimeAPISubscribe', name: eventName };\n        this.eventFunctions[eventName] = callback;\n        if (!dontSend) {\n            return this.send(event);\n        }\n        return true;\n    }\n    /**\n     * Subscribes to the given event group\n     * @param groupNumber Number(Assigned ENUM) of the group that needs to be subscribed to\n     */\n    subscribeGroup(groupNumber) {\n        const event = { event_name: 'furhatos.event.actions.ActionRealTimeAPISubscribe', group: groupNumber };\n        return this.send(event);\n    }\n    /**\n     * Says a given text\n     * @param text Text which needs to be said by Furhat\n     */\n    say(text) {\n        const event = { event_name: 'furhatos.event.actions.ActionSpeech', text };\n        return this.send(event);\n    }\n    /**\n     * Stimulates the speech of a user in the interaction space\n     * @param text Text which needs to be said by the user\n     */\n    userSpeech(text) {\n        const event = { event_name: 'furhatos.event.senses.SenseTypingEnd', messageText: text };\n        return this.send(event);\n    }\n    /**\n     * Stimulates SenseSpeechStart event. Can be used to stimulate user speech via typing\n     */\n    userSpeechStart() {\n        const event = { event_name: 'furhatos.event.senses.SenseTypingStart' };\n        return this.send(event);\n    }\n    /**\n     * Performs the given gesture\n     * @param name Name of the gesture that needs to be performed\n     */\n    gesture(name) {\n        const event = { event_name: 'furhatos.event.actions.ActionGesture', name };\n        return this.send(event);\n    }\n}\nexports.default = Furhat;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/furhat-core/dist/index.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}